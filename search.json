[{"title":"Basic website structure","url":"/2023/02/27/Basic-website-structure/","content":"&lt;!-- 这是一个 HTML 文件，它定义了网页的基本结构 --&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;我的网页编辑器&lt;/title&gt;    &lt;!-- 引入一个外部的 CSS 文件，它定义了网页的样式 --&gt;    &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;&lt;/head&gt;&lt;body&gt;    &lt;!-- 头部区域，显示网页的标题或 logo --&gt;    &lt;div class=&quot;header&quot;&gt;        &lt;h1&gt;我的网页编辑器&lt;/h1&gt;    &lt;/div&gt;    &lt;!-- 菜单导航区域，显示网页的不同功能 --&gt;    &lt;div class=&quot;nav&quot;&gt;        &lt;ul&gt;            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;新建&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;打开&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;保存&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;预览&lt;/a&gt;&lt;/li&gt;        &lt;/ul&gt;    &lt;/div&gt;    &lt;!-- 内容区域，显示用户输入和输出的内容 --&gt;    &lt;div class=&quot;content&quot;&gt;        &lt;!-- 输入区域，用户可以在这里输入 HTML 代码 --&gt;        &lt;textarea id=&quot;input&quot; rows=&quot;20&quot; cols=&quot;50&quot;&gt;&lt;/textarea&gt;        &lt;!-- 输出区域，用户可以在这里看到 HTML 代码渲染后的效果 --&gt;        &lt;iframe id=&quot;output&quot; width=&quot;500&quot; height=&quot;400&quot;&gt;&lt;/iframe&gt;    &lt;/div&gt;    &lt;!-- 底部区域，显示一些版权信息或联系方式 --&gt;    &lt;div class=&quot;footer&quot;&gt;        &amp;copy; 2023 我的公司. All rights reserved.    &lt;/div&gt;&lt;/body&gt;&lt;script type=&quot;text/javascript&quot;&gt;// 这是一个 JavaScript 脚本，它实现了预览功能// 当用户在输入区域输入 HTML 代码时，自动将其渲染到输出区域// 获取输入和输出元素var input = document.getElementById(&quot;input&quot;);var output = document.getElementById(&quot;output&quot;);// 定义一个函数，将输入内容复制到输出内容function preview() &#123;  output.contentWindow.document.open();  output.contentWindow.document.write(input.value);  output.contentWindow.document.close();&#125;// 给输入元素添加一个事件监听器，当内容改变时调用预览函数input.addEventListener(&quot;input&quot;, preview);// 初始调用一次预览函数preview();&lt;/script&gt;&lt;/html&gt;/* 这是一个 CSS 文件，它定义了网页的样式 *//* 设置整个页面的字体和背景颜色 */body &#123;  font-family: Arial, sans-serif;  background-color: #F0F0F0;&#125;/* 设置头部区域的背景颜色、文字居中和内边距 */.header &#123;  background-color: #F1F1F1;  text-align: center;  padding: 20px;&#125;/* 设置菜单导航区域为水平列表，并去掉默认样式 */.nav ul &#123;  list-style-type: none;  margin: 0;  padding: 0;&#125;/* 设置菜单导航项为内联块，并设置边框、背景颜色、内边距、外边距和文字居中 */.nav li &#123; display: inline-block; border: solid #C0C0C0; background-color: #E0E0E0; padding:10px;  margin:10px;  text-align:center; &#125;/* 设置菜单导航项为悬停时改变背景颜色 */.nav li:hover &#123; background-color:#D0D0D0; &#125;/* 设置菜单"},{"title":"How to build a Hexo blog","url":"/2023/02/27/How-to-build-a-Hexo-blog/","content":"如何搭建一个hexo博客前提条件\n安装Node.js和Git\n注册一个Github账号\n创建一个仓库，命名为&lt;用户名&gt;.github.io\n\n步骤\n在电脑上新建一个文件夹，比如hexo-blog，用来存放hexo的程序文件。\n打开该文件夹，右键选择Git Bash Here，输入以下命令安装hexo：\n\n$ npm install -g hexo-cli\n\n初始化一篇博客$ hexo init\n\n安装hexo-deployer-git插件，用来将网站部署到Github Pages$ npm install hexo-deployer-git --save\n\n修改_config.yml文件中的部分配置项：# Sitetitle: &lt;你的博客标题&gt;subtitle: &lt;你的博客副标题&gt;description: &lt;你的博客描述&gt;author: &lt;你的名字&gt;language: zh-CN# URLurl: https://&lt;用户名&gt;.github.io# Deploymentdeploy:  type: git  repo: https://github.com/&lt;用户名&gt;/&lt;用户名&gt;.github.io.git  branch: main # 如果你的仓库默认分支是master，则改为master\n\n运行以下命令生成和部署网站：$ hexo g # 生成静态文件到public目录下$ hexo d # 部署到Github Pages上 \n\n访问https:&#x2F;&#x2F;&lt;用户名&gt;.github.io就可以看到你的博客了后续操作写新文章：在source&#x2F;_posts目录下创建一个以.md为后缀名的文件，用Markdown语法编写内容，然后运行hexo g -d重新生成和部署网站。更换主题：在https://hexo.io/themes/上选择喜欢的主题，按照主题文档进行安装和配置。添加插件：在https://hexo.io/plugins/上选择需要的插件，按照插件文档进行安装和使用。"},{"title":"My first article","url":"/2023/02/26/My-first-article/","content":"欢迎来到我的博客，这是我的第一篇文章~.\n快速开始创建文章​ bash $ hexo new &quot;My New Post&quot; ​\n启动服务器​ bash $ hexo server ​\n生成静态网页​ bash $ hexo generate ​\n部署​ bash $ hexo deploy ​\n创建新主题后重新编辑$ hexo clean &amp;&amp; hexo generate\n"},{"title":"Hello World","url":"/2023/02/26/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"}]